{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abhishek/Desktop/redux-todoapp-master/src/components/TodoItem/TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteTodo, updateTodo } from \"../../actions\";\n\nconst TodoItem = ({\n  task\n}) => {\n  _s();\n\n  const [isUpdate, setIsUpdate] = useState(false);\n  const dispatch = useDispatch();\n  const textRef = useRef(null);\n\n  function editItemToState(e) {\n    e.preventDefault();\n    dispatch(updateTodo({\n      message: textRef.current.value,\n      id: task.id\n    }));\n    setIsUpdate(false);\n    textRef.current = null;\n  }\n\n  const renderForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: editItemToState,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: textRef,\n        type: \"text\",\n        defaultValue: task.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submt\",\n        children: \"Edit Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderItem = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [task.task, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsUpdate(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(deleteTodo(task.id)),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isUpdate ? renderForm() : renderItem()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodoItem, \"h6W+qMSRiRNAlP2sK6X3v+slPck=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/home/abhishek/Desktop/redux-todoapp-master/src/components/TodoItem/TodoItem.js"],"names":["React","useState","useRef","useDispatch","deleteTodo","updateTodo","TodoItem","task","isUpdate","setIsUpdate","dispatch","textRef","editItemToState","e","preventDefault","message","current","value","id","renderForm","renderItem"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,eAAvC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMS,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,OAAO,GAAGT,MAAM,CAAC,IAAD,CAAtB;;AACA,WAASU,eAAT,CAAyBC,CAAzB,EAA4B;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,QAAQ,CAACL,UAAU,CAAC;AAAEU,MAAAA,OAAO,EAAEJ,OAAO,CAACK,OAAR,CAAgBC,KAA3B;AAAkCC,MAAAA,EAAE,EAAEX,IAAI,CAACW;AAA3C,KAAD,CAAX,CAAR;AACAT,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,IAAAA,OAAO,CAACK,OAAR,GAAkB,IAAlB;AACD;;AAED,QAAMG,UAAU,GAAG,MAAM;AACvB,wBACE;AAAM,MAAA,QAAQ,EAAEP,eAAhB;AAAA,8BACE;AAAO,QAAA,GAAG,EAAED,OAAZ;AAAqB,QAAA,IAAI,EAAC,MAA1B;AAAiC,QAAA,YAAY,EAAEJ,IAAI,CAACA;AAApD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPD;;AAQA,QAAMa,UAAU,GAAG,MAAM;AACvB,wBACE;AAAA,iBACGb,IAAI,CAACA,IADR,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAME,WAAW,CAAC,IAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAMC,QAAQ,CAACN,UAAU,CAACG,IAAI,CAACW,EAAN,CAAX,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,oBADF;AAOD,GARD;;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAMV,QAAQ,GAAGW,UAAU,EAAb,GAAkBC,UAAU;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAnCD;;GAAMd,Q;UAEaH,W;;;KAFbG,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteTodo, updateTodo } from \"../../actions\";\n\nconst TodoItem = ({ task }) => {\n  const [isUpdate, setIsUpdate] = useState(false);\n  const dispatch = useDispatch();\n  const textRef = useRef(null);\n  function editItemToState(e) {\n    e.preventDefault();\n    dispatch(updateTodo({ message: textRef.current.value, id: task.id }));\n    setIsUpdate(false);\n    textRef.current = null;\n  }\n\n  const renderForm = () => {\n    return (\n      <form onSubmit={editItemToState}>\n        <input ref={textRef} type='text' defaultValue={task.task} />\n        <button type='submt'>Edit Todo</button>\n      </form>\n    );\n  };\n  const renderItem = () => {\n    return (\n      <>\n        {task.task}\n        <button onClick={() => setIsUpdate(true)}>Edit</button>\n        <button onClick={() => dispatch(deleteTodo(task.id))}>Delete</button>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <p></p>\n      <div>{isUpdate ? renderForm() : renderItem()}</div>\n    </>\n  );\n};\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}